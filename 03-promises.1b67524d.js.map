{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAEhCC,GADeH,EAAOI,SAAgB,MACxBJ,EAAOI,SAAe,MACpCC,EAAgBL,EAAOI,SAAiB,OAC1BJ,EAAOE,cAAc,yBAEzC,SAASI,EAAcC,EAAUC,GAC9BA,GAAgBC,SAASN,EAAYO,OACrC,IAAMC,EAAgBC,KAAKC,SAAW,GAkBtC,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACnCC,YAAW,WACJN,EACDI,EAAQ,CAAEG,SAAAX,EAAUC,UAEpBQ,EAAO,CAAEE,SAAAX,EAAUC,YAEtBA,MAEFW,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALZ,MAChBV,EAAAwB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANH,EAAM,UAE/DI,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALZ,MACjBV,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANH,EAAM,UAMnErB,EAAO2B,iBAAiB,UAAU,SAAAC,GAC/BA,EAAEC,iBAEF,IAAIC,EAAkBrB,SAASJ,EAAcK,OACzCqB,EAAOtB,SAASN,EAAYO,OAEhC,IAAKsB,EAAI,EAAGA,GAAKF,EAAiBE,IAC/B1B,EAAc0B,EAAGD,GACjBA,GAAQtB,SAASN,EAAYO,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = formEl.elements['delay'];\nconst inputStepEl = formEl.elements['step'];\nconst inputAmountEl = formEl.elements['amount'];\nconst submitBtnEl = formEl.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n   delay = delay + parseInt(inputStepEl.value);\n   const shouldResolve = Math.random() > 0.5;\n\n   const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            resolve({ position, delay });\n         } else {\n            reject({ position, delay });\n         }\n      }, delay);\n   })\n      .then(({ position, delay }) => {\n         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n   return promise;\n}\n\nformEl.addEventListener('submit', e => {\n   e.preventDefault();\n\n   let numberOfRepeats = parseInt(inputAmountEl.value);\n   let step = parseInt(inputStepEl.value);\n\n   for (i = 1; i <= numberOfRepeats; i++) {\n      createPromise(i, step);\n      step += parseInt(inputStepEl.value);\n   }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputStepEl","elements","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position1","delay","parseInt","value","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","_$delay","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","numberOfRepeats","step","i"],"version":3,"file":"03-promises.1b67524d.js.map"}