{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,SAEhCC,GADeH,EAAOI,SAAgB,MACxBJ,EAAOI,SAAe,MACpCC,EAAgBL,EAAOI,SAAiB,OAC1BJ,EAAOE,cAAc,yBAEzC,SAASI,EAAcC,EAAUC,GAC9BA,GAAgBC,SAASN,EAAYO,OACrC,MAAMC,EAAgBC,KAAKC,SAAW,GAkBtC,OAhBgB,IAAIC,SAAQ,CAACC,EAASC,KACnCC,YAAW,KACJN,EACDI,EAAQ,CAAEG,SAAAX,EAAUY,MAAAX,IAEpBQ,EAAO,CAAEE,SAAAX,EAAUY,MAAAX,MAEtBA,MAEFY,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MAChBrB,EAAAuB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,UAEvDI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MACjBrB,EAAAuB,OAAOG,QAAQ,sBAAoBN,QAAeC,UAM3DnB,EAAOyB,iBAAiB,UAAUC,IAC/BA,EAAEC,iBAEF,IAAIC,EAAkBnB,SAASJ,EAAcK,OACzCmB,EAAOpB,SAASN,EAAYO,OAEhC,IAAKoB,EAAI,EAAGA,GAAKF,EAAiBE,IAC/BxB,EAAcwB,EAAGD,GACjBA,GAAQpB,SAASN,EAAYO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = formEl.elements['delay'];\nconst inputStepEl = formEl.elements['step'];\nconst inputAmountEl = formEl.elements['amount'];\nconst submitBtnEl = formEl.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n   delay = delay + parseInt(inputStepEl.value);\n   const shouldResolve = Math.random() > 0.5;\n\n   const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            resolve({ position, delay });\n         } else {\n            reject({ position, delay });\n         }\n      }, delay);\n   })\n      .then(({ position, delay }) => {\n         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n   return promise;\n}\n\nformEl.addEventListener('submit', e => {\n   e.preventDefault();\n\n   let numberOfRepeats = parseInt(inputAmountEl.value);\n   let step = parseInt(inputStepEl.value);\n\n   for (i = 1; i <= numberOfRepeats; i++) {\n      createPromise(i, step);\n      step += parseInt(inputStepEl.value);\n   }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputStepEl","elements","$47d4ff9957288465$var$inputAmountEl","$47d4ff9957288465$var$createPromise","position1","delay1","parseInt","value","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notify","success","catch","failure","addEventListener","e","preventDefault","numberOfRepeats","step","i"],"version":3,"file":"03-promises.6f9fec69.js.map"}