{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAChCC,EAAeH,EAAOI,SAAgB,MACtCC,EAAcL,EAAOI,SAAe,KACpCE,EAAgBN,EAAOI,SAAiB,OAE9C,SAASG,EAAcC,EAAUC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAW,WACJN,EACDI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEtBA,MAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAChBpB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,MAAK,CAC7DM,SAAO,OAGdC,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBpB,EAAAuB,OAAOK,QAAQ,sBAAqCH,OAAfN,EAAS,QAAYM,OAANL,EAAM,MAAK,CAC5DM,SAAS,OAiBrBxB,EAAO2B,iBAAiB,UAAU,SAAAC,GAC/BA,EAAEC,iBAbL,WAGG,IAFA,IAAIC,EAAkBC,SAASzB,EAAc0B,OAEpCC,EAAI,EAAGA,GAAKH,EAAiBG,IACzB,IAANA,IACDC,KAAOH,SAAS5B,EAAa6B,QAEhCzB,EAAc0B,EAAGC,MACjBA,MAAQH,SAAS1B,EAAY2B,OAMhCG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = formEl.elements['delay'];\nconst inputStepEl = formEl.elements['step'];\nconst inputAmountEl = formEl.elements['amount'];\n\nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.5;\n\n   return new Promise((resolve, reject) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            resolve({ position, delay });\n         } else {\n            reject({ position, delay });\n         }\n      }, delay);\n   })\n      .then(({ position, delay }) => {\n         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n         });\n      })\n      .catch(({ position, delay }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n            useIcon: false,\n         });\n      });\n}\n\nfunction onSubmit() {\n   let numberOfRepeats = parseInt(inputAmountEl.value);\n\n   for (let i = 1; i <= numberOfRepeats; i++) {\n      if (i === 1) {\n         step = parseInt(inputDelayEl.value);\n      }\n      createPromise(i, step);\n      step += parseInt(inputStepEl.value);\n   }\n}\n\nformEl.addEventListener('submit', e => {\n   e.preventDefault();\n   onSubmit();\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","elements","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","useIcon","catch","failure","addEventListener","e","preventDefault","numberOfRepeats","parseInt","value","i","step","$ce04d3a99e08e73b$var$onSubmit"],"version":3,"file":"03-promises.0d1e4170.js.map"}