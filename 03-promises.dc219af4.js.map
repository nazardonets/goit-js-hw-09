{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAChCC,EAAeH,EAAOI,SAAgB,MACtCC,EAAcL,EAAOI,SAAe,KACpCE,EAAgBN,EAAOI,SAAiB,OACxCG,EAAcP,EAAOE,cAAc,yBAEzC,SAASM,EAAcC,EAAUC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GAkBtC,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACnCC,YAAW,WACJN,EACDI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEtBA,MAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAChBrB,EAAAwB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAE/DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBrB,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAMnEnB,EAAO2B,iBAAiB,SAAS,SAAAC,GAG9B,GAFAA,EAAEC,iBAEED,EAAEE,SAAWvB,EAAa,CAC3B,IAAIwB,EAAkBC,SAAS1B,EAAc2B,OACzCC,EAAOF,SAAS3B,EAAY4B,OAEhC,IAAKE,EAAI,EAAGA,GAAKJ,EAAiBI,IACrB,IAANA,IACDD,EAAOF,SAAS7B,EAAa8B,QAEhCzB,EAAc2B,EAAGD,GACjBA,GAAQF,SAAS3B,EAAY4B,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = formEl.elements['delay'];\nconst inputStepEl = formEl.elements['step'];\nconst inputAmountEl = formEl.elements['amount'];\nconst submitBtnEl = formEl.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.5;\n\n   const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            resolve({ position, delay });\n         } else {\n            reject({ position, delay });\n         }\n      }, delay);\n   })\n      .then(({ position, delay }) => {\n         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n   return promise;\n}\n\nformEl.addEventListener('click', e => {\n   e.preventDefault();\n\n   if (e.target === submitBtnEl) {\n      let numberOfRepeats = parseInt(inputAmountEl.value);\n      let step = parseInt(inputStepEl.value);\n\n      for (i = 1; i <= numberOfRepeats; i++) {\n         if (i === 1) {\n            step = parseInt(inputDelayEl.value);\n         }\n         createPromise(i, step);\n         step += parseInt(inputStepEl.value);\n      }\n   }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","elements","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$submitBtnEl","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","target","numberOfRepeats","parseInt","value","step","i"],"version":3,"file":"03-promises.dc219af4.js.map"}